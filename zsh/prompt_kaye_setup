# A simple theme that displays relevant, contextual information.
#
# Authors:
#   kaye Ionescu <kaye.ionescu@gmail.com>
#
# Screenshots:
#   http://i.imgur.com/nBEEZ.png
#

# Load dependencies.
pmodload 'helper'

function prompt_kaye_battery_symbol {
  local result=$1
  local battery_level=$2
  colors=("green" "green" "yellow" "yellow" "16" "red" "160")
  thresholds=(86 72 58 44 30 16 1)
  symbols=("‚£ø" "‚£æ" "‚†ø" "‚†æ" "‚†∂" "‚†¥" "‚†§")
  # symbols=("‚ò∞" "‚ò±" "‚ò≥" "‚öå" "‚öç" "‚öä" "‚öã")
  # symbols=("‚ñá" "‚ñÜ" "‚ñÖ" "‚ñÉ" "‚ñÇ" "‚ñÅ" "‚ñÅ")

  for (( i = 1; i <= $#symbols; i++ )) do
    if [ $battery_level -ge ${thresholds[$i]} ]; then
      eval "${result}='%F{${colors[$i]}}${symbols[$i]}%f'"
      break
    fi
  done
}

function prompt_kaye_battery {
  local percent_sign="%"
  local battery_symbol=""
  local threshold="100"

  # escape percent "%" in zsh
  [[ -n ${ZSH_VERSION-} ]] && percent_sign="${percent_sign//\%/%%}"

  # osx
  if hash ioreg 2>/dev/null; then
    local ioreg_output
    if ioreg_output=$(ioreg -rc AppleSmartBattery 2>/dev/null); then
      local battery_capacity=${ioreg_output#*MaxCapacity\"\ \=}
      battery_capacity=${battery_capacity%%\ \"*}

      local current_capacity=${ioreg_output#*CurrentCapacity\"\ \=}
      current_capacity=${current_capacity%%\ \"*}

      local battery_level=$(($current_capacity * 100 / $battery_capacity))
      [[ $battery_level -gt $threshold ]] && return 1

      prompt_kaye_battery_symbol battery_symbol $battery_level

      _prompt_kaye_battery="%s${battery_symbol}"
      return
    fi
  fi

  # linux
  for possible_battery_dir in /sys/class/power_supply/BAT*; do
    if [[ -d $possible_battery_dir && -f "$possible_battery_dir/energy_full" && -f "$possible_battery_dir/energy_now" ]]; then
      current_capacity=$( <"$possible_battery_dir/energy_now" )
      battery_capacity=$( <"$possible_battery_dir/energy_full" )
      local battery_level=$(($current_capacity * 100 / $battery_capacity))
      [[ $battery_level -gt $threshold ]] && return 1

      _prompt_kaye_battery="%s${battery_symbol}${battery_level}${percent_sign}"
      return
    fi
  done

return 1
}

function prompt_kaye_pwd {
  local dir_limit="2"
  local truncation="‚ãØ "
  local first_char
  local part_count=0
  local formatted_cwd=""
  local dir_sep="/"
  local tilde="~"

  local cwd="${PWD/#$HOME/$tilde}"

  # get first char of the path, i.e. tilde or slash
  [[ -n ${ZSH_VERSION-} ]] && first_char=$cwd[1,1] || first_char=${cwd::1}

  # remove leading tilde
  cwd="${cwd#\~}"

  while [[ "$cwd" == */* && "$cwd" != "/" ]]; do
    # pop off last part of cwd
    local part="${cwd##*/}"
    cwd="${cwd%/*}"

    formatted_cwd="$dir_sep$part$formatted_cwd"
    part_count=$((part_count+1))

    [[ $part_count -eq $dir_limit ]] && first_char="$truncation" && break
  done

  _prompt_kaye_pwd="%s$first_char$formatted_cwd"
}


function prompt_kaye_precmd {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS

  # Format PWD.
  prompt_kaye_pwd

  # Battery Info
  prompt_kaye_battery

  # Get Git repository information.
  if (( $+functions[git-info] )); then
    git-info
  fi

  # Get Ruby info
  if (( $+functions[ruby-info] )); then
    ruby-info
  fi

  # Get Virtual env info
  if (( $+functions[python-info] )); then
    python-info
  fi

  # Get Node info
  if (( $+functions[node-info] )); then
    node-info
  fi
}

function prompt_kaye_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)

  # Load required functions.
  autoload -Uz add-zsh-hook

  # Add hook for calling infos before each command.
  add-zsh-hook precmd prompt_kaye_precmd

  # Set editor-info parameters.
  zstyle ':prezto:module:editor:info:completing' format '%B%F{red}...%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary:overwrite' format ' %F{red}‚ô∫%f'
  zstyle ':prezto:module:editor:info:keymap:primary' format '%B%F{red}‚ùØ%F{yellow}‚ùØ%F{green}‚ùØ%f%b'
  zstyle ':prezto:module:editor:info:keymap:alternate' format '%B%F{green}‚ùÆ%F{yellow}‚ùÆ%F{red}‚ùÆ%f%b'

  # Set git-info parameters.
  zstyle ':prezto:module:git:info' verbose 'yes'
  zstyle ':prezto:module:git:info:action' format ':%%B%F{yellow}%s%f%%b'
  zstyle ':prezto:module:git:info:added' format ' %%B%F{green}‚úö%f%%b'
  zstyle ':prezto:module:git:info:ahead' format ' %%B%F{yellow}‚¨Ü%f%%b'
  zstyle ':prezto:module:git:info:behind' format ' %%B%F{yellow}‚¨á%f%%b'
  # zstyle ':prezto:module:git:info:branch' format '%%B%F{green}[%f%%b%%B%F{yellow}%b%f%%b'
  zstyle ':prezto:module:git:info:branch' format 'on %%B%F{yellow}%b%f%%b'
  zstyle ':prezto:module:git:info:clean' format " "
  # zstyle ':prezto:module:git:info:clean' format "%B%F{green}]%f%b "
  zstyle ':prezto:module:git:info:commit' format ':%F{green}%.7c%f'
  zstyle ':prezto:module:git:info:deleted' format ' %%B%F{red}‚úñ%f%%b'
  zstyle ':prezto:module:git:info:dirty' format "%F{red}!%f%  "
  # zstyle ':prezto:module:git:info:dirty' format "%%B%F{red}]%f%%b %F{yellow}‚ö°%f  "
  zstyle ':prezto:module:git:info:modified' format ' %%B%F{blue}‚ú±%f%%b'
  zstyle ':prezto:module:git:info:position' format ':%F{red}%p%f'
  zstyle ':prezto:module:git:info:renamed' format ' %%B%F{magenta}‚ûú%f%%b'
  zstyle ':prezto:module:git:info:stashed' format ' %%B%F{cyan}‚ú≠%f%%b'
  zstyle ':prezto:module:git:info:unmerged' format ' %%B%F{yellow}‚ïê%f%%b'
  zstyle ':prezto:module:git:info:untracked' format ' %%B%F{white}ùñÆ%f%%b'
  zstyle ':prezto:module:git:info:keys' format \
    'prompt' '$(coalesce "%b" "%p" "%c")%C%D%s' \
    'rprompt' '%A%B%S%a%d%m%r%U%u'

  # Set ruby-info parameters.
  zstyle ':prezto:module:ruby:info:version' format ' %F{red}rb:%v%f'

  # Set python-info parameters.
  zstyle ':prezto:module:python:info:virtualenv' format ' %F{220}py:%v%f'

  # Set node-info parameters
  zstyle ':prezto:module:node:info:version' format ' %F{green}node:%v%f'

  # Œª üåµ %F{cyan}%n%f
  # Define prompts.
  PROMPT='
%F{red}${_prompt_kaye_pwd}%f ${git_info:+${(e)git_info[prompt]}}${ruby_info[version]}${node_info[version]}${python_info[virtualenv]}%(!. %B%F{red}#%f%b.)${editor_info[keymap]} '
  # RPROMPT='${editor_info[overwrite]}%(?:: %F{red}‚èé%f)${VIM:+" %B%F{green}V%f%b"}${git_info[rprompt]}'
  RPROMPT='${VIM:+" %B%F{green}V%f%b"}${git_info[rprompt]} ${_prompt_kaye_battery}'
  SPROMPT='zsh: correct %F{red}%R%f to %F{green}%r%f [nyae]? '
}

prompt_kaye_setup "$@"
